# Generated by Django 3.1.7 on 2021-03-23 19:27

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255, verbose_name='first name')),
                ('last_name', models.CharField(max_length=255, verbose_name='last name')),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='category name')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='position name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='theme name')),
                ('category', models.ForeignKey(help_text='themes for specific category', on_delete=django.db.models.deletion.CASCADE, related_name='themes', to='interview_app.category')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='text')),
                ('additional_info', models.TextField(blank=True, null=True, verbose_name='additional info')),
                ('category', models.ForeignKey(help_text='question category', on_delete=django.db.models.deletion.PROTECT, to='interview_app.category', verbose_name='category')),
                ('theme', models.ForeignKey(blank=True, help_text='question theme', null=True, on_delete=django.db.models.deletion.SET_NULL, to='interview_app.theme', verbose_name='theme')),
            ],
            options={
                'ordering': ['category', 'theme'],
            },
        ),
        migrations.CreateModel(
            name='PositionQuestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_required', models.BooleanField(default=True, help_text='Show is this message required or not', verbose_name='is required')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='position_questions', to='interview_app.position')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='position_questions', to='interview_app.question')),
            ],
        ),
        migrations.AddField(
            model_name='position',
            name='questions',
            field=models.ManyToManyField(through='interview_app.PositionQuestions', to='interview_app.Question'),
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(help_text='Interview date and time', verbose_name='interview date')),
                ('state', models.CharField(choices=[('canceled', 'Canceled'), ('scheduled', 'Scheduled'), ('waiting', 'Waiting'), ('passed', 'Passed'), ('failed', 'Failed')], default='scheduled', max_length=255, verbose_name='interview state')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to='interview_app.candidate', verbose_name='candidate')),
                ('interviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to=settings.AUTH_USER_MODEL, verbose_name='interviewer')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to='interview_app.position', verbose_name='position')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.IntegerField(help_text='mark in range 0 - 10', validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)], verbose_name='mark')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='comment to answer')),
                ('interview', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='interview_app.interview', verbose_name='interview')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='interview_app.question', verbose_name='question')),
            ],
            options={
                'unique_together': {('question', 'interview')},
            },
        ),
    ]
